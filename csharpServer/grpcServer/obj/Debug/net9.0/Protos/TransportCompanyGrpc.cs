// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/TransportCompany.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TransportCompany.GrpcServer {
  public static partial class TransportCompany
  {
    static readonly string __ServiceName = "TransportCompany";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.LoginRequest> __Marshaller_LoginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.LoginRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.LoginReply> __Marshaller_LoginReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.LoginReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.AllTripsRequest> __Marshaller_AllTripsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.AllTripsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.TripsReply> __Marshaller_TripsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.TripsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.SearchTripSeatsRequest> __Marshaller_SearchTripSeatsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.SearchTripSeatsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.SearchTripSeatsReply> __Marshaller_SearchTripSeatsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.SearchTripSeatsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.ReserveSeatsRequest> __Marshaller_ReserveSeatsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.ReserveSeatsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.ReserveSeatsReply> __Marshaller_ReserveSeatsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.ReserveSeatsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.NotifySeatsReservedRequest> __Marshaller_NotifySeatsReservedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.NotifySeatsReservedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.NotifySeatsReservedReply> __Marshaller_NotifySeatsReservedReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.NotifySeatsReservedReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.GetTripRequest> __Marshaller_GetTripRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.GetTripRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.GetTripReply> __Marshaller_GetTripReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.GetTripReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.LogoutRequest> __Marshaller_LogoutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.LogoutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TransportCompany.GrpcServer.LogoutReply> __Marshaller_LogoutReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TransportCompany.GrpcServer.LogoutReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.LoginRequest, global::TransportCompany.GrpcServer.LoginReply> __Method_Login = new grpc::Method<global::TransportCompany.GrpcServer.LoginRequest, global::TransportCompany.GrpcServer.LoginReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_LoginRequest,
        __Marshaller_LoginReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.AllTripsRequest, global::TransportCompany.GrpcServer.TripsReply> __Method_GetAllTrips = new grpc::Method<global::TransportCompany.GrpcServer.AllTripsRequest, global::TransportCompany.GrpcServer.TripsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllTrips",
        __Marshaller_AllTripsRequest,
        __Marshaller_TripsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.SearchTripSeatsRequest, global::TransportCompany.GrpcServer.SearchTripSeatsReply> __Method_SearchTripSeats = new grpc::Method<global::TransportCompany.GrpcServer.SearchTripSeatsRequest, global::TransportCompany.GrpcServer.SearchTripSeatsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchTripSeats",
        __Marshaller_SearchTripSeatsRequest,
        __Marshaller_SearchTripSeatsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.ReserveSeatsRequest, global::TransportCompany.GrpcServer.ReserveSeatsReply> __Method_ReserveSeats = new grpc::Method<global::TransportCompany.GrpcServer.ReserveSeatsRequest, global::TransportCompany.GrpcServer.ReserveSeatsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReserveSeats",
        __Marshaller_ReserveSeatsRequest,
        __Marshaller_ReserveSeatsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.NotifySeatsReservedRequest, global::TransportCompany.GrpcServer.NotifySeatsReservedReply> __Method_NotifySeatsReserved = new grpc::Method<global::TransportCompany.GrpcServer.NotifySeatsReservedRequest, global::TransportCompany.GrpcServer.NotifySeatsReservedReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NotifySeatsReserved",
        __Marshaller_NotifySeatsReservedRequest,
        __Marshaller_NotifySeatsReservedReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.GetTripRequest, global::TransportCompany.GrpcServer.GetTripReply> __Method_GetTrip = new grpc::Method<global::TransportCompany.GrpcServer.GetTripRequest, global::TransportCompany.GrpcServer.GetTripReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTrip",
        __Marshaller_GetTripRequest,
        __Marshaller_GetTripReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TransportCompany.GrpcServer.LogoutRequest, global::TransportCompany.GrpcServer.LogoutReply> __Method_Logout = new grpc::Method<global::TransportCompany.GrpcServer.LogoutRequest, global::TransportCompany.GrpcServer.LogoutReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_LogoutRequest,
        __Marshaller_LogoutReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TransportCompany.GrpcServer.TransportCompanyReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TransportCompany</summary>
    [grpc::BindServiceMethod(typeof(TransportCompany), "BindService")]
    public abstract partial class TransportCompanyBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TransportCompany.GrpcServer.LoginReply> Login(global::TransportCompany.GrpcServer.LoginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TransportCompany.GrpcServer.TripsReply> GetAllTrips(global::TransportCompany.GrpcServer.AllTripsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TransportCompany.GrpcServer.SearchTripSeatsReply> SearchTripSeats(global::TransportCompany.GrpcServer.SearchTripSeatsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TransportCompany.GrpcServer.ReserveSeatsReply> ReserveSeats(global::TransportCompany.GrpcServer.ReserveSeatsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task NotifySeatsReserved(global::TransportCompany.GrpcServer.NotifySeatsReservedRequest request, grpc::IServerStreamWriter<global::TransportCompany.GrpcServer.NotifySeatsReservedReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TransportCompany.GrpcServer.GetTripReply> GetTrip(global::TransportCompany.GrpcServer.GetTripRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TransportCompany.GrpcServer.LogoutReply> Logout(global::TransportCompany.GrpcServer.LogoutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TransportCompany</summary>
    public partial class TransportCompanyClient : grpc::ClientBase<TransportCompanyClient>
    {
      /// <summary>Creates a new client for TransportCompany</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TransportCompanyClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TransportCompany that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TransportCompanyClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TransportCompanyClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TransportCompanyClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.LoginReply Login(global::TransportCompany.GrpcServer.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.LoginReply Login(global::TransportCompany.GrpcServer.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.LoginReply> LoginAsync(global::TransportCompany.GrpcServer.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.LoginReply> LoginAsync(global::TransportCompany.GrpcServer.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.TripsReply GetAllTrips(global::TransportCompany.GrpcServer.AllTripsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllTrips(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.TripsReply GetAllTrips(global::TransportCompany.GrpcServer.AllTripsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllTrips, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.TripsReply> GetAllTripsAsync(global::TransportCompany.GrpcServer.AllTripsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllTripsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.TripsReply> GetAllTripsAsync(global::TransportCompany.GrpcServer.AllTripsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllTrips, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.SearchTripSeatsReply SearchTripSeats(global::TransportCompany.GrpcServer.SearchTripSeatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchTripSeats(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.SearchTripSeatsReply SearchTripSeats(global::TransportCompany.GrpcServer.SearchTripSeatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchTripSeats, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.SearchTripSeatsReply> SearchTripSeatsAsync(global::TransportCompany.GrpcServer.SearchTripSeatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchTripSeatsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.SearchTripSeatsReply> SearchTripSeatsAsync(global::TransportCompany.GrpcServer.SearchTripSeatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchTripSeats, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.ReserveSeatsReply ReserveSeats(global::TransportCompany.GrpcServer.ReserveSeatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReserveSeats(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.ReserveSeatsReply ReserveSeats(global::TransportCompany.GrpcServer.ReserveSeatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReserveSeats, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.ReserveSeatsReply> ReserveSeatsAsync(global::TransportCompany.GrpcServer.ReserveSeatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReserveSeatsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.ReserveSeatsReply> ReserveSeatsAsync(global::TransportCompany.GrpcServer.ReserveSeatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReserveSeats, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::TransportCompany.GrpcServer.NotifySeatsReservedReply> NotifySeatsReserved(global::TransportCompany.GrpcServer.NotifySeatsReservedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NotifySeatsReserved(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::TransportCompany.GrpcServer.NotifySeatsReservedReply> NotifySeatsReserved(global::TransportCompany.GrpcServer.NotifySeatsReservedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_NotifySeatsReserved, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.GetTripReply GetTrip(global::TransportCompany.GrpcServer.GetTripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTrip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.GetTripReply GetTrip(global::TransportCompany.GrpcServer.GetTripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.GetTripReply> GetTripAsync(global::TransportCompany.GrpcServer.GetTripRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTripAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.GetTripReply> GetTripAsync(global::TransportCompany.GrpcServer.GetTripRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTrip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.LogoutReply Logout(global::TransportCompany.GrpcServer.LogoutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Logout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TransportCompany.GrpcServer.LogoutReply Logout(global::TransportCompany.GrpcServer.LogoutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Logout, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.LogoutReply> LogoutAsync(global::TransportCompany.GrpcServer.LogoutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TransportCompany.GrpcServer.LogoutReply> LogoutAsync(global::TransportCompany.GrpcServer.LogoutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Logout, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TransportCompanyClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TransportCompanyClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TransportCompanyBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_GetAllTrips, serviceImpl.GetAllTrips)
          .AddMethod(__Method_SearchTripSeats, serviceImpl.SearchTripSeats)
          .AddMethod(__Method_ReserveSeats, serviceImpl.ReserveSeats)
          .AddMethod(__Method_NotifySeatsReserved, serviceImpl.NotifySeatsReserved)
          .AddMethod(__Method_GetTrip, serviceImpl.GetTrip)
          .AddMethod(__Method_Logout, serviceImpl.Logout).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TransportCompanyBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TransportCompany.GrpcServer.LoginRequest, global::TransportCompany.GrpcServer.LoginReply>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_GetAllTrips, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TransportCompany.GrpcServer.AllTripsRequest, global::TransportCompany.GrpcServer.TripsReply>(serviceImpl.GetAllTrips));
      serviceBinder.AddMethod(__Method_SearchTripSeats, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TransportCompany.GrpcServer.SearchTripSeatsRequest, global::TransportCompany.GrpcServer.SearchTripSeatsReply>(serviceImpl.SearchTripSeats));
      serviceBinder.AddMethod(__Method_ReserveSeats, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TransportCompany.GrpcServer.ReserveSeatsRequest, global::TransportCompany.GrpcServer.ReserveSeatsReply>(serviceImpl.ReserveSeats));
      serviceBinder.AddMethod(__Method_NotifySeatsReserved, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::TransportCompany.GrpcServer.NotifySeatsReservedRequest, global::TransportCompany.GrpcServer.NotifySeatsReservedReply>(serviceImpl.NotifySeatsReserved));
      serviceBinder.AddMethod(__Method_GetTrip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TransportCompany.GrpcServer.GetTripRequest, global::TransportCompany.GrpcServer.GetTripReply>(serviceImpl.GetTrip));
      serviceBinder.AddMethod(__Method_Logout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TransportCompany.GrpcServer.LogoutRequest, global::TransportCompany.GrpcServer.LogoutReply>(serviceImpl.Logout));
    }

  }
}
#endregion
